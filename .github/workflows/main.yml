name: CI & Deploy - DevOps 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend:
    name: Build & Test Backend with Maven
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test with Maven
        run: mvn clean verify --file ./simple-api/pom.xml

      - name: Analyse code with SonarCloud
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=rsmadhi78_tp-devops-correction-docker \
            -Dsonar.organization=rsmadhi-org \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            --file ./simple-api/pom.xml

  build-and-push-docker-image:
    name: Build & Push Docker Images
    needs: test-backend
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./simple-api
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          context: ./database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          context: ./http-server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy:
    name: Deploy to Remote Server with Ansible
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/main'  # Ne dÃ©ploie que depuis main
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Disable SSH Host Key Checking
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Deploy with Ansible
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          SPRING_USER: ${{ secrets.SPRING_USER }}
          SPRING_PASSWORD: ${{ secrets.SPRING_PASSWORD }}
        run: |
          cd ansible
          ansible-playbook playbook.yml -i inventories/setup.yml \
            --extra-vars "postgres_user=$POSTGRES_USER postgres_password=$POSTGRES_PASSWORD spring_user=$SPRING_USER spring_password=$SPRING_PASSWORD"
